const T=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}};T();const M={token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI3YjgzNGY1ZS05YjM3LTRlMDgtOGExZS0wMjBjMjYwN2QxYzAiLCJpZCI6MjgxODAzLCJpYXQiOjE3NDEyNTc1ODN9.q3kRxAWSoC8gCfU_qRrNcjOqTDDfPqGJTEPE1J7d7-w"};class A{constructor(e,t={}){this.viewer=null,this.containerId=e,this.options={ion:{accessToken:M.token}},this.options=Object.assign(this.options,t),this.initializeMap()}initializeMap(){return this.viewer=new Cesium.Viewer(this.containerId,this.options),this.viewer}}class O{constructor(e,t){this.viewer=e,this.camera=e.camera,this.options=t,this.initializeCameraControl(this.options)}initializeCameraControl(e){this.viewer.camera.setView({destination:Cesium.Cartesian3.fromDegrees(e.longitude,e.latitude,e.height),orientation:{heading:Cesium.Math.toRadians(e.heading),pitch:Cesium.Math.toRadians(e.pitch),roll:Cesium.Math.toRadians(e.roll)}})}flyTo(e){const{longitude:t,latitude:i,height:s=1e3,duration:r=3,heading:a=0,pitch:n=-90,roll:o=0}=e;this.camera.flyTo({destination:Cesium.Cartesian3.fromDegrees(t,i,s),orientation:{heading:Cesium.Math.toRadians(a),pitch:Cesium.Math.toRadians(n),roll:Cesium.Math.toRadians(o)},duration:r})}setView(e){const{longitude:t,latitude:i,height:s=1e3,heading:r=0,pitch:a=-90,roll:n=0}=e;this.camera.setView({destination:Cesium.Cartesian3.fromDegrees(t,i,s),orientation:{heading:Cesium.Math.toRadians(r),pitch:Cesium.Math.toRadians(a),roll:Cesium.Math.toRadians(n)}})}getPosition(){const e=Cesium.Cartographic.fromCartesian(this.camera.position);return{longitude:Cesium.Math.toDegrees(e.longitude),latitude:Cesium.Math.toDegrees(e.latitude),height:e.height,heading:Cesium.Math.toDegrees(this.camera.heading),pitch:Cesium.Math.toDegrees(this.camera.pitch),roll:Cesium.Math.toDegrees(this.camera.roll)}}setOrientation(e){const{heading:t,pitch:i,roll:s}=e;t!==void 0&&this.camera.setHeading(Cesium.Math.toRadians(t)),i!==void 0&&this.camera.setPitch(Cesium.Math.toRadians(i)),s!==void 0&&this.camera.setRoll(Cesium.Math.toRadians(s))}move(e){const{distance:t,direction:i}=e,s=Cesium.Math.toRadians(i);this.camera.position;const r=new Cesium.Cartesian3(Math.sin(s)*t,Math.cos(s)*t,0);this.camera.move(r)}rotate(e){const{heading:t,pitch:i,roll:s}=e;t!==void 0&&this.camera.rotateRight(Cesium.Math.toRadians(t)),i!==void 0&&this.camera.rotateUp(Cesium.Math.toRadians(i)),s!==void 0&&this.camera.rotateDown(Cesium.Math.toRadians(s))}}class k{constructor(e,t={}){this.viewer=e,this.options=t,this.basemaps=new Map,this.currentBasemap=null,this.initializeBasemaps()}async initializeBasemaps(){await this.addDefaultBasemaps();const e=this.options.id||"imagery";this.switchBasemap(e)}async addDefaultBasemaps(){const e=await Cesium.createWorldImageryAsync();this.addBasemap("imagery",{id:"imagery",name:"\u5F71\u50CF\u5E95\u56FE",provider:e,visible:!1}),this.addBasemap("osm",{id:"osm",name:"OpenStreetMap",provider:new Cesium.OpenStreetMapImageryProvider({url:"https://tile.openstreetmap.org/"}),visible:!1}),this.addBasemap("gaode",{id:"gaode",name:"\u9AD8\u5FB7\u5E95\u56FE",provider:new Cesium.UrlTemplateImageryProvider({url:"https://webrd01.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}",minimumLevel:0,maximumLevel:18}),visible:!1})}addBasemap(e,t){const{name:i,provider:s,visible:r=!1}=t,a=new Cesium.ImageryLayer(s,{show:r});this.basemaps.set(e,{id:e,name:i,layer:a,provider:s}),this.viewer.imageryLayers.add(a)}removeBasemap(e){const t=this.basemaps.get(e);t&&(this.viewer.imageryLayers.remove(t.layer),this.basemaps.delete(e),this.currentBasemap===e&&this.switchBasemap("imagery"))}async switchBasemap(e){const t=this.basemaps.get(e);if(!t){console.warn(`\u5E95\u56FE ${e} \u4E0D\u5B58\u5728`);return}this.basemaps.forEach(i=>{i.layer.show=!1}),t.layer.show=!0,this.currentBasemap=e,await this.viewer.scene.requestRender()}getBasemapList(){return Array.from(this.basemaps.values()).map(e=>({id:e.id,name:e.name,visible:e.layer.show}))}getCurrentBasemap(){return this.currentBasemap?this.basemaps.get(this.currentBasemap):null}setBasemapBrightness(e,t){const i=this.basemaps.get(e);i&&(t=Math.max(0,Math.min(10,t)),i.layer&&(i.layer.brightness=t),i.layer.imageryLayers&&i.layer.imageryLayers.forEach(s=>{s.brightness=t}))}addWMTSBasemap(e,t){const i=new Cesium.WebMapTileServiceImageryProvider({url:t.url,layer:t.layer,style:t.style,format:t.format,tileMatrixSetID:t.tileMatrixSetID});this.addBasemap(e,{name:t.name||e,provider:i,visible:!1})}addBingMapsBasemap(e,t){const i=new Cesium.BingMapsImageryProvider({url:"https://dev.virtualearth.net",key:t.key,mapStyle:t.mapStyle});this.addBasemap(e,{name:t.name||e,provider:i,visible:!1})}destroy(){this.basemaps.clear(),this.currentBasemap=null}}class D{constructor(e,t={}){this.viewer=e,this.options=t,this.container=null,this.initialize()}initialize(){this.container=document.createElement("div"),this.container.className="map-control fullscreen-control",this.container.innerHTML=`
            <button class="fullscreen-toggle" title="\u5168\u5C4F">\u2922</button>
        `,this.container.querySelector(".fullscreen-toggle").onclick=()=>this.toggleFullscreen(),document.addEventListener("fullscreenchange",()=>this.updateButtonState()),this.viewer.container.appendChild(this.container)}toggleFullscreen(){document.fullscreenElement?document.exitFullscreen():this.viewer.container.requestFullscreen()}updateButtonState(){const e=this.container.querySelector(".fullscreen-toggle");e.innerHTML=document.fullscreenElement?"\u2913":"\u2922"}show(){this.container.style.display="block"}hide(){this.container.style.display="none"}setPosition(e){this.container.className=`map-control fullscreen-control ${e}`}destroy(){document.removeEventListener("fullscreenchange",this.updateButtonState),this.container.remove()}}class x{constructor(e,t={}){this.viewer=e,this.options=t,this.container=null,this.zoomLevels=[5e7,3e7,1e7,5e6,1e6,5e5,1e5,5e4,1e4,5e3,1e3],this.currentZoomIndex=0,this.initialize()}initialize(){this.container=document.createElement("div"),this.container.className="map-control zoom-control",this.container.innerHTML=`
            <button class="zoom-in" title="\u653E\u5927">+</button>
            <button class="zoom-out" title="\u7F29\u5C0F">-</button>
        `,this.container.querySelector(".zoom-in").onclick=()=>this.zoomIn(),this.container.querySelector(".zoom-out").onclick=()=>this.zoomOut(),this.viewer.container.appendChild(this.container)}getZoom(){return this.zoomLevels[this.currentZoomIndex]}setZoom(e){if(e>0&&(this.currentZoomIndex=e>this.zoomLevels.length?this.zoomLevels.length-1:e,this.currentZoomIndex>0)){this.currentZoomIndex--;const t=this.zoomLevels[this.currentZoomIndex];this.getCameraCenterPosition()&&this.viewer.camera.flyTo({destination:Cesium.Cartesian3.fromRadians(this.viewer.camera.positionCartographic.longitude,this.viewer.camera.positionCartographic.latitude,t),duration:1.5})}}getCameraCenterPosition(){const e=this.viewer.scene.canvas,t=new Cesium.Cartesian2(e.clientWidth/2,e.clientHeight/2);return this.viewer.camera.pickEllipsoid(t,this.viewer.scene.globe.ellipsoid)}zoomOut(){if(this.currentZoomIndex=this.calculateZoomIndex(),this.currentZoomIndex>0){this.currentZoomIndex--;const e=this.zoomLevels[this.currentZoomIndex];this.getCameraCenterPosition()&&this.viewer.camera.flyTo({destination:Cesium.Cartesian3.fromRadians(this.viewer.camera.positionCartographic.longitude,this.viewer.camera.positionCartographic.latitude,e),duration:1.5})}}zoomIn(){if(this.currentZoomIndex=this.calculateZoomIndex(),this.currentZoomIndex<this.zoomLevels.length-1){this.currentZoomIndex++;const e=this.zoomLevels[this.currentZoomIndex];this.getCameraCenterPosition()&&this.viewer.camera.flyTo({destination:Cesium.Cartesian3.fromRadians(this.viewer.camera.positionCartographic.longitude,this.viewer.camera.positionCartographic.latitude,e),duration:1.5})}}show(){this.container.style.display="block"}hide(){this.container.style.display="none"}setPosition(e){this.container.className=`map-control zoom-control ${e}`}destroy(){this.container.remove()}calculateZoomIndex(){const e=this.viewer.camera.positionCartographic.height;let t=0,i=Math.abs(this.zoomLevels[0]-e);return this.zoomLevels.forEach((s,r)=>{const a=Math.abs(s-e);a<i&&(i=a,t=r)}),t}}class R{constructor(e,t={}){this.viewer=e,this.options=t,this.container=null,this.initialize()}initialize(){this.container=document.createElement("div"),this.container.className="map-control scale-control",this.updateScale=()=>{const e=this.getScaleDistance();this.container.innerHTML=`\u6BD4\u4F8B\u5C3A 1:${Math.round(e).toLocaleString()}`},this.viewer.camera.changed.addEventListener(this.updateScale),this.updateScale(),this.viewer.container.appendChild(this.container)}getScaleDistance(){const e=this.viewer.canvas.clientWidth,t=this.viewer.canvas.clientHeight,i=this.viewer.camera.getPickRay({x:0,y:t/2}),s=this.viewer.camera.getPickRay({x:e,y:t/2}),r=this.viewer.scene.globe,a=r.pick(i,this.viewer.scene),n=r.pick(s,this.viewer.scene);return!a||!n?0:Cesium.Cartesian3.distance(a,n)}show(){this.container.style.display="block"}hide(){this.container.style.display="none"}setPosition(e){this.container.className=`map-control scale-control ${e}`}destroy(){this.viewer.camera.changed.removeEventListener(this.updateScale),this.container.remove()}}class P{constructor(e,t={}){var i,s,r;this.viewer=e,this._drawHandler=null,this._dataSource=null,this._tempPositions=[],this._mousePos=null,this._drawType=null,this._originalCursor=null,this.defaultStyles={point:{color:Cesium.Color.RED,pixelSize:10,outlineColor:Cesium.Color.YELLOW,outlineWidth:2},polyline:{color:Cesium.Color.RED,width:3,material:new Cesium.PolylineDashMaterialProperty({color:Cesium.Color.YELLOW}),depthFailMaterial:new Cesium.PolylineDashMaterialProperty({color:Cesium.Color.YELLOW})},polygon:{color:Cesium.Color.RED,width:3,fillColor:Cesium.Color.RED.withAlpha(.4),material:new Cesium.PolylineDashMaterialProperty({color:Cesium.Color.YELLOW}),depthFailMaterial:new Cesium.PolylineDashMaterialProperty({color:Cesium.Color.YELLOW})}},this.options={styles:{point:{...this.defaultStyles.point,...((i=t.styles)==null?void 0:i.point)||{}},polyline:{...this.defaultStyles.polyline,...((s=t.styles)==null?void 0:s.polyline)||{}},polygon:{...this.defaultStyles.polygon,...((r=t.styles)==null?void 0:r.polygon)||{}}}}}draw(e,t){this.clearAll(),this._drawType=e,this._dataSource=new Cesium.CustomDataSource("_dataSource"),this.viewer.dataSources.add(this._dataSource),this._originalCursor=this.viewer.container.style.cursor,this.viewer.container.style.cursor="crosshair",this._registerEvents(t)}_registerEvents(e){switch(this._drawHandler=new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas),this.viewer.scene.globe.depthTestAgainstTerrain=!0,this._drawType){case"Point":{this._leftClickEventForPoint();break}case"Polyline":{this._leftClickEventForPolyline(),this._mouseMoveEventForPolyline(),this._rightClickEventForPolyline(e),this._doubleClickEventForPolyline(e);break}case"Polygon":{this._leftClickEventForPolygon(),this._mouseMoveEventForPolygon(),this._rightClickEventForPolygon(e),this._doubleClickEventForPolygon(e);break}}}_leftClickEventForPoint(){this._drawHandler.setInputAction(e=>{let t=this.viewer.scene.pickPosition(e.position);if(!t)return;let i=Cesium.Cartographic.fromCartesian(t),s=[Cesium.Math.toDegrees(i.longitude),Cesium.Math.toDegrees(i.latitude),i.height+50];this._addPoint(s)},Cesium.ScreenSpaceEventType.LEFT_CLICK)}_leftClickEventForPolyline(){this._drawHandler.setInputAction(e=>{let t=this.viewer.scene.pickPosition(e.position);!t||(this._tempPositions.push(t),this._addPolyline())},Cesium.ScreenSpaceEventType.LEFT_CLICK)}_mouseMoveEventForPolyline(){this._drawHandler.setInputAction(e=>{let t=this.viewer.scene.pickPosition(e.endPosition);!t||(this._mousePos=t)},Cesium.ScreenSpaceEventType.MOUSE_MOVE)}_rightClickEventForPolyline(e){this._drawHandler.setInputAction(t=>{!this.viewer.scene.pickPosition(t.position)||(this._removeAllEvent(),this._dataSource.entities.removeAll(),this._dataSource.entities.add({polyline:{positions:this._tempPositions,clampToGround:!0,...this.options.styles.polyline}}))},Cesium.ScreenSpaceEventType.RIGHT_CLICK)}_doubleClickEventForPolyline(e){this._drawHandler.setInputAction(t=>{if(!this.viewer.scene.pickPosition(t.position))return;this._removeAllEvent();const s=this._dataSource.entities.add({polyline:{positions:this._tempPositions,clampToGround:!0,...this.options.styles.polyline}});e&&typeof e=="function"&&e(s)},Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK)}_leftClickEventForPolygon(){this._drawHandler.setInputAction(e=>{let t=this.viewer.scene.pickPosition(e.position);!t||(this._tempPositions.push(t),this._addPolygon())},Cesium.ScreenSpaceEventType.LEFT_CLICK)}_mouseMoveEventForPolygon(){this._drawHandler.setInputAction(e=>{let t=this.viewer.scene.pickPosition(e.endPosition);!t||(this._mousePos=t)},Cesium.ScreenSpaceEventType.MOUSE_MOVE)}_rightClickEventForPolygon(e){this._drawHandler.setInputAction(t=>{if(!this.viewer.scene.pickPosition(t.position))return;if(this._tempPositions.length<3){alert("\u8BF7\u81F3\u5C11\u7ED8\u52363\u4E2A\u70B9\u6765\u6784\u6210\u4E00\u4E2A\u9762");return}this._tempPositions.push(this._tempPositions[0]),this._removeAllEvent(),this._dataSource.entities.removeAll();const s=this._dataSource.entities.add({polyline:{positions:this._tempPositions,clampToGround:!0,...this.options.styles.polygon},polygon:{hierarchy:this._tempPositions,extrudedHeightReference:Cesium.HeightReference.CLAMP_TO_GROUND,material:this.options.styles.polygon.fillColor,clampToGround:!0}});e&&typeof e=="function"&&e(s)},Cesium.ScreenSpaceEventType.RIGHT_CLICK)}_doubleClickEventForPolygon(e){this._drawHandler.setInputAction(t=>{if(!this.viewer.scene.pickPosition(t.position))return;if(this._tempPositions.length<3){alert("\u8BF7\u81F3\u5C11\u7ED8\u52363\u4E2A\u70B9\u6765\u6784\u6210\u4E00\u4E2A\u9762");return}this._tempPositions.push(this._tempPositions[0]),this._removeAllEvent(),this._dataSource.entities.removeAll();const s=this._dataSource.entities.add({polyline:{positions:this._tempPositions,clampToGround:!0,...this.options.styles.polygon},polygon:{hierarchy:this._tempPositions,extrudedHeightReference:Cesium.HeightReference.CLAMP_TO_GROUND,material:this.options.styles.polygon.fillColor,clampToGround:!0}});e&&typeof e=="function"&&e(s)},Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK)}_removeAllEvent(){this._drawHandler&&(this._drawHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK),this._drawHandler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE),this._drawHandler.removeInputAction(Cesium.ScreenSpaceEventType.RIGHT_CLICK),this._drawHandler.destroy(),this._drawHandler=null),this._originalCursor!==null&&(this.viewer.container.style.cursor=this._originalCursor,this._originalCursor=null)}_resetParams(){this._dataSource!=null&&(this._dataSource.entities.removeAll(),this.viewer.dataSources.remove(this._dataSource)),this._dataSource=null,this._tempPositions=[],this._mousePos=null,this._drawType=null,this._originalCursor&&(this.viewer.container.style.cursor=this._originalCursor,this._originalCursor=null)}clearAll(){this._removeAllEvent(),this._resetParams()}_addPoint(e){this._dataSource.entities.add({position:Cesium.Cartesian3.fromDegrees(e[0],e[1],e[2]),point:this.options.styles.point})}_addPolyline(){this._dataSource.entities.add({polyline:{positions:new Cesium.CallbackProperty(()=>{let e=Array.from(this._tempPositions);return this._mousePos&&e.push(this._mousePos),e},!1),clampToGround:!0,...this.options.styles.polyline}})}_addPolygon(){this._tempPositions.length==1?this._dataSource.entities.add({polyline:{positions:new Cesium.CallbackProperty(()=>{let e=Array.from(this._tempPositions);return this._mousePos&&e.push(this._mousePos),e},!1),clampToGround:!0,...this.options.styles.polygon}}):(this._dataSource.entities.removeAll(),this._dataSource.entities.add({polygon:{hierarchy:new Cesium.CallbackProperty(()=>{let e=Array.from(this._tempPositions);return this._mousePos&&e.push(this._mousePos),new Cesium.PolygonHierarchy(e)},!1),extrudedHeightReference:Cesium.HeightReference.CLAMP_TO_GROUND,material:this.options.styles.polygon.fillColor,clampToGround:!0},polyline:{positions:new Cesium.CallbackProperty(()=>{let e=Array.from(this._tempPositions);return this._mousePos&&(e.push(this._mousePos),e.push(e[0])),e},!1),clampToGround:!0,...this.options.styles.polygon}}))}}class z{constructor(e,t={}){this.viewer=e,this.drawTool=new P(e,t),this._measureEntities=new Map,this._measureLabels=new Map,this._currentMeasureId=null,this._measureCount=0}measureDistance(e){this.clearAll(),this._measureCount++,this._currentMeasureId=`distance_${this._measureCount}`,this.drawTool.draw("Polyline",t=>{const i=t.polyline.positions.getValue(),s=this._calculateDistance(i);this._measureEntities.set(this._currentMeasureId,t);const r=i[i.length-1],a=this._createLabel([r],s);this._measureLabels.set(this._currentMeasureId,a),e&&e({id:this._currentMeasureId,distance:s,positions:i})})}measureArea(e){this._measureCount++,this._currentMeasureId=`area_${this._measureCount}`,this.drawTool.draw("Polygon",t=>{const i=t.polygon.hierarchy.getValue().positions,s=this._calculateArea(i);this._measureEntities.set(this._currentMeasureId,t);const r=this._calculatePolygonCenter(i),a=this._createLabel([r],s,!0);this._measureLabels.set(this._currentMeasureId,a),e&&e({id:this._currentMeasureId,area:s,positions:i})})}clearAll(){this._measureEntities.forEach(e=>{this.viewer.entities.remove(e)}),this._measureEntities.clear(),this._measureLabels.forEach(e=>{this.viewer.entities.remove(e)}),this._measureLabels.clear(),this.drawTool.clearAll(),this._currentMeasureId=null,this._measureCount=0}clear(e){this._measureEntities.has(e)&&(this.viewer.entities.remove(this._measureEntities.get(e)),this._measureEntities.delete(e)),this._measureLabels.has(e)&&(this.viewer.entities.remove(this._measureLabels.get(e)),this._measureLabels.delete(e))}_calculateDistance(e){let t=0;for(let i=0;i<e.length-1;i++){const s=e[i],r=e[i+1];t+=this._getDistance(s,r)}return t}_calculateArea(e){let t=0;const i=e.map(s=>{const r=Cesium.Cartographic.fromCartesian(s);return{longitude:Cesium.Math.toDegrees(r.longitude),latitude:Cesium.Math.toDegrees(r.latitude)}});for(let s=0;s<i.length;s++){const r=(s+1)%i.length;t+=i[s].longitude*i[r].latitude,t-=i[r].longitude*i[s].latitude}return t=Math.abs(t)*111.32*111.32*Math.cos(i[0].latitude*Math.PI/180)/2,t}_getDistance(e,t){const i=Cesium.Cartographic.fromCartesian(e),s=Cesium.Cartographic.fromCartesian(t),r=Cesium.Math.toDegrees(i.longitude),a=Cesium.Math.toDegrees(i.latitude),n=Cesium.Math.toDegrees(s.longitude),o=Cesium.Math.toDegrees(s.latitude),l=6371,c=(o-a)*Math.PI/180,h=(n-r)*Math.PI/180,d=Math.sin(c/2)*Math.sin(c/2)+Math.cos(a*Math.PI/180)*Math.cos(o*Math.PI/180)*Math.sin(h/2)*Math.sin(h/2),u=2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d));return l*u}_createLabel(e,t,i=!1){const s=e[0],r=i?`${t.toFixed(2)} \u5E73\u65B9\u516C\u91CC`:`${t.toFixed(2)} \u516C\u91CC`;return this.viewer.entities.add({position:s,label:{text:r,font:"14px sans-serif",fillColor:Cesium.Color.WHITE,outlineColor:Cesium.Color.BLACK,outlineWidth:2,verticalOrigin:1,pixelOffset:new Cesium.Cartesian2(0,-10),showBackground:!0,backgroundColor:new Cesium.Color(.165,.165,.165,.8),backgroundPadding:new Cesium.Cartesian2(7,5),disableDepthTestDistance:Number.POSITIVE_INFINITY}})}_calculatePolygonCenter(e){let t=0,i=0,s=0;e.forEach(n=>{t+=n.x,i+=n.y,s+=n.z});const r=new Cesium.Cartesian3(t/e.length,i/e.length,s/e.length),a=Cesium.Cartographic.fromCartesian(r);return Cesium.Cartesian3.fromRadians(a.longitude,a.latitude,a.height)}}class B{constructor(e={}){this.id=e.id||Cesium.createGuid(),this.options=Object.assign({},e),this.entity=new Cesium.Entity(this.options)}update(e){Object.assign(this.options,e),this.entity.update(this.options)}getEntity(){return this.entity}}class H{constructor(e){if(!e)throw new Error("Viewer instance is required");this.viewer=e,this.dataSource=new Cesium.CustomDataSource("entityManager"),this.viewer.dataSources.add(this.dataSource),this.entities=new Map}addEntity(e,t=!1){const i=new B(e);return this.entities.set(i.id,i),this.dataSource.entities.add(i.getEntity()),t&&this.locateEntity(i.id),i.id}removeEntity(e){if(this.entities.has(e)){const t=this.entities.get(e);this.dataSource.entities.remove(t.getEntity()),this.entities.delete(e)}}updateEntity(e,t){this.entities.has(e)&&this.entities.get(e).update(t)}locateEntity(e){if(this.entities.has(e)){const t=this.entities.get(e);this.viewer.zoomTo(t.getEntity())}}getAllEntities(){return Array.from(this.entities.values()).map(e=>e.getEntity())}clearEntities(){this.dataSource.entities.removeAll(),this.entities.clear()}}class F{constructor(e,t={}){var i,s,r;if(!e)throw new Error("Viewer instance is required");this.viewer=e,this._dataSource=new Cesium.CustomDataSource("markerDataSource"),this.viewer.dataSources.add(this._dataSource),this._markers=new Map,this.defaultStyles={point:{color:Cesium.Color.RED,pixelSize:10,outlineColor:Cesium.Color.WHITE,outlineWidth:2,heightReference:Cesium.HeightReference.CLAMP_TO_GROUND},billboard:{scale:1,heightReference:Cesium.HeightReference.CLAMP_TO_GROUND,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,horizontalOrigin:Cesium.HorizontalOrigin.CENTER,scaleByDistance:new Cesium.NearFarScalar(100,1.5,1e5,.5)},label:{font:"14px sans-serif",fillColor:Cesium.Color.WHITE,outlineColor:Cesium.Color.BLACK,outlineWidth:2,style:"FILL_AND_OUTLINE",heightReference:Cesium.HeightReference.CLAMP_TO_GROUND,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,horizontalOrigin:Cesium.HorizontalOrigin.CENTER,pixelOffset:{x:0,y:-10}}},this.options={styles:{point:{...this.defaultStyles.point,...((i=t.styles)==null?void 0:i.point)||{}},billboard:{...this.defaultStyles.billboard,...((s=t.styles)==null?void 0:s.billboard)||{}},label:{...this.defaultStyles.label,...((r=t.styles)==null?void 0:r.label)||{}}}}}addMarker(e,t={}){const i=t.id||Cesium.createGuid();let s;if(Array.isArray(e))s=Cesium.Cartesian3.fromDegrees(e[0],e[1],e[2]||0);else if(e instanceof Cesium.Cartesian3)s=e;else throw new Error("Invalid position format");const r={id:i,position:s,...t};t.useIcon?r.billboard={image:t.image||"https://cesium.com/docs/tutorials/creating-entities/images/Cesium_Logo_overlay.png",...this.options.styles.billboard,...t.billboard||{}}:r.point={...this.options.styles.point,...t.point||{}},t.text&&(r.label={text:t.text,...this.options.styles.label,...t.label||{}});const a=this._dataSource.entities.add(r);return this._markers.set(i,a),i}getMarker(e){return this._markers.get(e)}getAllMarkers(){return Array.from(this._markers.values())}removeMarker(e){if(this._markers.has(e)){const t=this._markers.get(e);this._dataSource.entities.remove(t),this._markers.delete(e)}}clearAll(){this._dataSource.entities.removeAll(),this._markers.clear()}locateMarker(e){const t=this.getMarker(e);t&&this.viewer.zoomTo(t)}updateMarker(e,t={}){const i=this.getMarker(e);i&&(t.position&&(Array.isArray(t.position)?i.position=Cesium.Cartesian3.fromDegrees(t.position[0],t.position[1],t.position[2]||0):t.position instanceof Cesium.Cartesian3&&(i.position=t.position)),t.point&&i.point&&Object.assign(i.point,t.point),t.billboard&&i.billboard&&Object.assign(i.billboard,t.billboard),t.label&&i.label&&(Object.assign(i.label,t.label),t.text&&(i.label.text=t.text)))}setMarkerVisibility(e,t){const i=this.getMarker(e);i&&(i.show=t)}addMarkers(e){if(!Array.isArray(e))throw new Error("Markers parameter must be an array");const t=[];for(const i of e){const{position:s,...r}=i;if(!s)throw new Error("Each marker must have a position property");const a=this.addMarker(s,r);t.push(a)}return t}}class N{constructor(e,t={}){var i,s,r,a;if(!e)throw new Error("Viewer instance is required");this.viewer=e,this._dataSource=new Cesium.CustomDataSource("clusterMarkerDataSource"),this.viewer.dataSources.add(this._dataSource),this._markers=new Map,this.defaultStyles={point:{color:Cesium.Color.RED,pixelSize:10,outlineColor:Cesium.Color.WHITE,outlineWidth:2,heightReference:Cesium.HeightReference.CLAMP_TO_GROUND},billboard:{scale:1,heightReference:Cesium.HeightReference.CLAMP_TO_GROUND,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,horizontalOrigin:Cesium.HorizontalOrigin.CENTER,scaleByDistance:new Cesium.NearFarScalar(100,1.5,1e5,.5)},label:{font:"14px sans-serif",fillColor:Cesium.Color.WHITE,outlineColor:Cesium.Color.BLACK,outlineWidth:2,style:"FILL_AND_OUTLINE",heightReference:Cesium.HeightReference.CLAMP_TO_GROUND,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,horizontalOrigin:Cesium.HorizontalOrigin.CENTER,pixelOffset:{x:0,y:-10}},cluster:{enabled:!0,pixelRange:80,minimumClusterSize:2,clusterBillboards:!0,clusterLabels:!0,clusterPoints:!0}},this.options={styles:{point:{...this.defaultStyles.point,...((i=t.styles)==null?void 0:i.point)||{}},billboard:{...this.defaultStyles.billboard,...((s=t.styles)==null?void 0:s.billboard)||{}},label:{...this.defaultStyles.label,...((r=t.styles)==null?void 0:r.label)||{}},cluster:{...this.defaultStyles.cluster,...((a=t.styles)==null?void 0:a.cluster)||{}}}},this._initCluster()}_initCluster(){const e=this.options.styles.cluster,t=this._dataSource.clustering;t.enabled=e.enabled,t.pixelRange=e.pixelRange,t.minimumClusterSize=e.minimumClusterSize,t.clusterBillboards=e.clusterBillboards,t.clusterLabels=e.clusterLabels,t.clusterPoints=e.clusterPoints,t.clusterEvent.addEventListener((r,a)=>{const n=r.length;let o,l;n>=50?(o="#D32F2F",l=36):n>=20?(o="#E64A19",l=32):n>=10?(o="#7B1FA2",l=28):(o="#1976D2",l=24),a.point.show=!1,a.label.show=!1,a.billboard.show=!0,a.billboard.image=i(n,o,l),a.billboard.width=l*2.5,a.billboard.height=l*2.5,a.billboard.disableDepthTestDistance=Number.POSITIVE_INFINITY,a.billboard.verticalOrigin=Cesium.VerticalOrigin.CENTER,a.billboard.horizontalOrigin=Cesium.HorizontalOrigin.CENTER,a.billboard.scaleByDistance=new Cesium.NearFarScalar(100,1,2e5,.6)});function i(r,a,n){const o=window.devicePixelRatio||1,l=document.createElement("canvas"),c=l.getContext("2d"),h=n*2.6,d=h*o;l.width=d,l.height=d,l.style.width=`${h}px`,l.style.height=`${h}px`,c.scale(o,o);const u=h/2,C=h/2,g=n;c.imageSmoothingEnabled=!0,c.imageSmoothingQuality="high",c.shadowColor="rgba(0, 0, 0, 0.6)",c.shadowBlur=8,c.shadowOffsetX=0,c.shadowOffsetY=3;const p=c.createRadialGradient(u,C-g/3,g/10,u,C,g);p.addColorStop(0,s(a,15)),p.addColorStop(1,a),c.beginPath(),c.arc(u,C,g,0,Math.PI*2,!1),c.fillStyle=p,c.fill(),c.shadowColor="transparent",c.strokeStyle="rgba(255, 255, 255, 0.9)",c.lineWidth=2.5,c.stroke();const y=Math.max(12,Math.floor(n*.8));return c.fillStyle="#FFFFFF",c.font=`bold ${y}px Arial, sans-serif`,c.textAlign="center",c.textBaseline="middle",c.shadowColor="rgba(0, 0, 0, 0.8)",c.shadowBlur=4,c.shadowOffsetX=0,c.shadowOffsetY=1,c.textRendering="geometricPrecision",c.fillText(r.toString(),u,C),l}function s(r,a){let n=r.replace("#",""),o=parseInt(n.substring(0,2),16),l=parseInt(n.substring(2,4),16),c=parseInt(n.substring(4,6),16);return o=Math.min(255,Math.round(o*(100+a)/100)),l=Math.min(255,Math.round(l*(100+a)/100)),c=Math.min(255,Math.round(c*(100+a)/100)),o=o.toString(16).padStart(2,"0"),l=l.toString(16).padStart(2,"0"),c=c.toString(16).padStart(2,"0"),`#${o}${l}${c}`}}addMarker(e,t={}){const i=t.id||Cesium.createGuid();let s;if(Array.isArray(e))s=Cesium.Cartesian3.fromDegrees(e[0],e[1],e[2]||0);else if(e instanceof Cesium.Cartesian3)s=e;else throw new Error("Invalid position format");const r={id:i,position:s,...t};t.useIcon?r.billboard={image:t.image||"https://cesium.com/docs/tutorials/creating-entities/images/Cesium_Logo_overlay.png",...this.options.styles.billboard,...t.billboard||{}}:r.point={...this.options.styles.point,...t.point||{}},t.text&&(r.label={text:t.text,...this.options.styles.label,...t.label||{}});const a=this._dataSource.entities.add(r);return this._markers.set(i,a),i}getMarker(e){return this._markers.get(e)}getAllMarkers(){return Array.from(this._markers.values())}removeMarker(e){if(this._markers.has(e)){const t=this._markers.get(e);this._dataSource.entities.remove(t),this._markers.delete(e)}}clearAll(){this._dataSource.entities.removeAll(),this._markers.clear()}locateMarker(e){const t=this.getMarker(e);t&&this.viewer.zoomTo(t)}updateMarker(e,t={}){const i=this.getMarker(e);i&&(t.position&&(Array.isArray(t.position)?i.position=Cesium.Cartesian3.fromDegrees(t.position[0],t.position[1],t.position[2]||0):t.position instanceof Cesium.Cartesian3&&(i.position=t.position)),t.point&&i.point&&Object.assign(i.point,t.point),t.billboard&&i.billboard&&Object.assign(i.billboard,t.billboard),t.label&&i.label&&(Object.assign(i.label,t.label),t.text&&(i.label.text=t.text)))}setMarkerVisibility(e,t){const i=this.getMarker(e);i&&(i.show=t)}addMarkers(e){if(!Array.isArray(e))throw new Error("Markers parameter must be an array");const t=[];for(const i of e){const{position:s,...r}=i;if(!s)throw new Error("Each marker must have a position property");const a=this.addMarker(s,r);t.push(a)}return t}setClusterOptions(e={}){const t=this._dataSource.clustering;e.enabled!==void 0&&(t.enabled=e.enabled),e.pixelRange!==void 0&&(t.pixelRange=e.pixelRange),e.minimumClusterSize!==void 0&&(t.minimumClusterSize=e.minimumClusterSize),e.clusterBillboards!==void 0&&(t.clusterBillboards=e.clusterBillboards),e.clusterLabels!==void 0&&(t.clusterLabels=e.clusterLabels),e.clusterPoints!==void 0&&(t.clusterPoints=e.clusterPoints),this.options.styles.cluster={...this.options.styles.cluster,...e}}enableClustering(){this._dataSource.clustering.enabled=!0,this.options.styles.cluster.enabled=!0}disableClustering(){this._dataSource.clustering.enabled=!1,this.options.styles.cluster.enabled=!1}}class W{constructor(e){if(!e)throw new Error("Viewer instance is required");this.viewer=e,this.ellipsoid=Cesium.Ellipsoid.WGS84,this._analysisEntities=new Map}calculateDistance(e,t,i=!1){const s=this._getCartesian3(e),r=this._getCartesian3(t);if(!s||!r)throw new Error("Invalid point coordinates");if(!i)return Cesium.Cartesian3.distance(s,r);const a=Cesium.Cartographic.fromCartesian(s),n=Cesium.Cartographic.fromCartesian(r);return new Cesium.EllipsoidGeodesic(a,n,this.ellipsoid).surfaceDistance}calculateArea(e){if(!e||e.length<3)throw new Error("At least 3 positions are required to calculate area");const s=e.map(r=>this._getCartesian3(r)).map(r=>Cesium.Cartographic.fromCartesian(r)).map(r=>[Cesium.Math.toDegrees(r.longitude),Cesium.Math.toDegrees(r.latitude)]);return this._calculateSphericalPolygonArea(s)}calculatePointToLineDistance(e,t){const i=this._getCartesian3(e),s=t.map(a=>this._getCartesian3(a));if(!i||s.length<2)throw new Error("Invalid point or line coordinates");let r=Number.MAX_VALUE;for(let a=0;a<s.length-1;a++){const n=s[a],o=s[a+1],l=this._pointToLineSegmentDistance(i,n,o);r=Math.min(r,l)}return r}calculatePointToPolygonDistance(e,t){const i=this._getCartesian3(e),s=t.map(r=>this._getCartesian3(r));if(!i||s.length<3)throw new Error("Invalid point or polygon coordinates");return this._isPointInPolygon(e,t)?0:this.calculatePointToLineDistance(e,t)}isPointInPolygon(e,t){return this._isPointInPolygon(e,t)}createBuffer(e,t,i={}){let s=[];Array.isArray(e)?Array.isArray(e[0])?s=e.map(c=>this._getCartesian3(c)):typeof e[0]=="number"?s=[this._getCartesian3(e)]:s=e:s=[e];const a={...{material:Cesium.Color.fromAlpha(Cesium.Color.BLUE,.5),outline:!0,outlineColor:Cesium.Color.WHITE,outlineWidth:2},...i};let n=[];s.length===1?n=this._createCirclePositions(s[0],t):s.length===2?n=this._createLineBufferPositions(s[0],s[1],t):n=this._createPolygonBufferPositions(s,t);const o=Cesium.createGuid(),l=this.viewer.entities.add({id:o,polygon:{hierarchy:new Cesium.PolygonHierarchy(n),material:new Cesium.ColorMaterialProperty(a.material),outline:a.outline,outlineColor:a.outlineColor,outlineWidth:a.outlineWidth,height:0,heightReference:1}});return this._analysisEntities.set(o,l),o}doPolygonsIntersect(e,t){const i=e.map(r=>{const a=this._getCartesian3(r),n=Cesium.Cartographic.fromCartesian(a);return[Cesium.Math.toDegrees(n.longitude),Cesium.Math.toDegrees(n.latitude)]}),s=t.map(r=>{const a=this._getCartesian3(r),n=Cesium.Cartographic.fromCartesian(a);return[Cesium.Math.toDegrees(n.longitude),Cesium.Math.toDegrees(n.latitude)]});for(const r of i)if(this._isPointInPolygon2D(r,s))return!0;for(const r of s)if(this._isPointInPolygon2D(r,i))return!0;for(let r=0;r<i.length;r++){const a=i[r],n=i[(r+1)%i.length];for(let o=0;o<s.length;o++){const l=s[o],c=s[(o+1)%s.length];if(this._doLineSegmentsIntersect2D(a,n,l,c))return!0}}return!1}calculateIntersection(e,t,i={}){if(!this.doPolygonsIntersect(e,t))return null;const s=Cesium.createGuid();return{...{material:Cesium.Color.fromAlpha(Cesium.Color.RED,.7),outline:!0,outlineColor:Cesium.Color.WHITE,outlineWidth:2},...i},s}getAllAnalysisEntities(){return Array.from(this._analysisEntities.values())}removeAnalysisEntity(e){if(this._analysisEntities.has(e)){const t=this._analysisEntities.get(e);this.viewer.entities.remove(t),this._analysisEntities.delete(e)}}clearAllAnalysisEntities(){this._analysisEntities.forEach(e=>{this.viewer.entities.remove(e)}),this._analysisEntities.clear()}_getCartesian3(e){if(e instanceof Cesium.Cartesian3)return e;if(Array.isArray(e)&&e.length>=2){const t=e[0],i=e[1],s=e.length>2?e[2]:0;return Cesium.Cartesian3.fromDegrees(t,i,s)}return null}_calculateSphericalPolygonArea(e){if(e.length<3)return 0;const t=6371e3;let i=0;for(let r=0;r<e.length;r++){const a=e[r],n=e[(r+1)%e.length],o=Cesium.Math.toRadians(a[0]),l=Cesium.Math.toRadians(a[1]),c=Cesium.Math.toRadians(n[0]);Cesium.Math.toRadians(n[1]),i+=(c-o)*Math.sin(l)}return Math.abs(i*t*t/2)}_isPointInPolygon(e,t){const i=this._getCartesian3(e),s=t.map(o=>this._getCartesian3(o));if(!i||s.length<3)return!1;const r=Cesium.Cartographic.fromCartesian(i),a=[Cesium.Math.toDegrees(r.longitude),Cesium.Math.toDegrees(r.latitude)],n=s.map(o=>{const l=Cesium.Cartographic.fromCartesian(o);return[Cesium.Math.toDegrees(l.longitude),Cesium.Math.toDegrees(l.latitude)]});return this._isPointInPolygon2D(a,n)}_isPointInPolygon2D(e,t){const i=e[0],s=e[1];let r=!1;for(let a=0,n=t.length-1;a<t.length;n=a++){const o=t[a][0],l=t[a][1],c=t[n][0],h=t[n][1];l>s!=h>s&&i<(c-o)*(s-l)/(h-l)+o&&(r=!r)}return r}_pointToLineSegmentDistance(e,t,i){const s=Cesium.Cartesian3.subtract(i,t,new Cesium.Cartesian3),r=Cesium.Cartesian3.subtract(e,t,new Cesium.Cartesian3),a=Cesium.Cartesian3.dot(r,s);if(a<=0)return Cesium.Cartesian3.distance(e,t);const n=Cesium.Cartesian3.dot(s,s);if(n<=a)return Cesium.Cartesian3.distance(e,i);const o=a/n,l=Cesium.Cartesian3.add(t,Cesium.Cartesian3.multiplyByScalar(s,o,new Cesium.Cartesian3),new Cesium.Cartesian3);return Cesium.Cartesian3.distance(e,l)}_createCirclePositions(e,t,i=64){const s=[],r=Cesium.Cartographic.fromCartesian(e);for(let a=0;a<i;a++){const n=a/i*Math.PI*2,o=Math.cos(n)*t,l=Math.sin(n)*t,c=r.longitude+o/(this.ellipsoid.radii.x*Math.cos(r.latitude)),h=r.latitude+l/this.ellipsoid.radii.y;s.push(Cesium.Cartesian3.fromRadians(c,h,r.height))}return s}_createLineBufferPositions(e,t,i){const s=[],r=Cesium.Cartographic.fromCartesian(e),a=Cesium.Cartographic.fromCartesian(t),n=a.longitude-r.longitude,o=a.latitude-r.latitude,l=Math.sqrt(n*n+o*o);if(l===0)return this._createCirclePositions(e,i);const c=-o/l,h=n/l,d=i/(this.ellipsoid.radii.x*Math.cos(r.latitude)),u=c*d,C=h*d,g=Cesium.Cartesian3.fromRadians(r.longitude+u,r.latitude+C,r.height),p=Cesium.Cartesian3.fromRadians(a.longitude+u,a.latitude+C,a.height),y=Cesium.Cartesian3.fromRadians(a.longitude-u,a.latitude-C,a.height),_=Cesium.Cartesian3.fromRadians(r.longitude-u,r.latitude-C,r.height);return s.push(g,p,y,_),s}_createPolygonBufferPositions(e,t){const i=e.map(r=>Cesium.Cartographic.fromCartesian(r)),s=[];for(let r=0;r<e.length;r++){const a=r===0?e.length-1:r-1,n=r===e.length-1?0:r+1,o=i[a],l=i[r],c=i[n],h=l.longitude-o.longitude,d=l.latitude-o.latitude,u=c.longitude-l.longitude,C=c.latitude-l.latitude,g=Math.sqrt(h*h+d*d),p=Math.sqrt(u*u+C*C),y=d/g,_=-h/g,E=C/p,S=-u/p;let f=(y+E)/2,w=(_+S)/2;const v=Math.sqrt(f*f+w*w);f=f/v,w=w/v;const b=t/(this.ellipsoid.radii.x*Math.cos(l.latitude)),L=l.longitude+f*b,I=l.latitude+w*b;s.push(Cesium.Cartesian3.fromRadians(L,I,l.height))}return s}_doLineSegmentsIntersect2D(e,t,i,s){const r=t[0]-e[0],a=t[1]-e[1],n=s[0]-i[0],o=s[1]-i[1],l=a*n-r*o;if(l===0)return!1;const c=e[0]-i[0],h=e[1]-i[1],d=(o*c-n*h)/l,u=(a*c-r*h)/l;return d>=0&&d<=1&&u>=0&&u<=1}}class G{constructor(e,t={}){if(!e)throw new Error("Viewer instance is required");this.viewer=e,this._layers=new Map,this.defaultOptions={alpha:1,show:!0,zIndex:void 0,...t}}async addLayer(e){const{type:t,url:i,options:s={},id:r,...a}=e,n=r||`layer_${Date.now()}_${Math.floor(Math.random()*1e4)}`;let o=null,l=null,c=null,h={...this.defaultOptions,...s,...a};switch(t){case"wms":o=new Cesium.WebMapServiceImageryProvider({url:i,...h}),l=this.viewer.imageryLayers.addImageryProvider(o);break;case"wmts":o=new Cesium.WebMapTileServiceImageryProvider({url:i,...h}),l=this.viewer.imageryLayers.addImageryProvider(o);break;case"arcgis":o=new Cesium.ArcGisMapServerImageryProvider({url:i,...h}),l=this.viewer.imageryLayers.addImageryProvider(o);break;case"xyz":case"tms":o=new Cesium.UrlTemplateImageryProvider({url:i,...h}),l=this.viewer.imageryLayers.addImageryProvider(o);break;case"singleTile":o=new Cesium.SingleTileImageryProvider({url:i,...h}),l=this.viewer.imageryLayers.addImageryProvider(o);break;case"ion":o=new Cesium.IonImageryProvider({assetId:h.assetId,accessToken:h.accessToken,...h}),l=this.viewer.imageryLayers.addImageryProvider(o);break;case"wfs":const u=await(await fetch(i)).json();c=await Cesium.GeoJsonDataSource.load(u,h),this.viewer.dataSources.add(c);break;default:throw new Error(`\u4E0D\u652F\u6301\u7684\u56FE\u5C42\u7C7B\u578B: ${t}`)}return this._layers.set(n,{type:t,imageryLayer:l,dataSource:c,provider:o,config:h}),n}getLayer(e){return this._layers.get(e)}getAllLayers(){return Array.from(this._layers.values())}removeLayer(e){const t=this._layers.get(e);t&&(t.imageryLayer&&this.viewer.imageryLayers.remove(t.imageryLayer,!0),t.dataSource&&this.viewer.dataSources.remove(t.dataSource,!0),this._layers.delete(e))}clearAll(){for(const e of this._layers.keys())this.removeLayer(e)}setLayerVisibility(e,t){const i=this._layers.get(e);i&&i.imageryLayer&&(i.imageryLayer.show=t),i&&i.dataSource&&(i.dataSource.show=t)}updateLayer(e,t={}){const i=this._layers.get(e);i&&i.imageryLayer&&(Object.assign(i.imageryLayer,t),Object.assign(i.config,t)),i&&i.dataSource&&(Object.assign(i.dataSource,t),Object.assign(i.config,t))}async addLayers(e){if(!Array.isArray(e))throw new Error("layers\u53C2\u6570\u5FC5\u987B\u4E3A\u6570\u7EC4");const t=[];for(const i of e){const s=await this.addLayer(i);t.push(s)}return t}}class V{constructor(e,t={}){Cesium.Ion.defaultAccessToken=M.token;const i={containerId:e,fullscreenButton:!1,baseLayerPicker:!1,vrButton:!1,timeline:!1,animation:!1,homeButton:!1,geocoder:!1,navigationHelpButton:!1,sceneModePicker:!1,baseLayerPicker:!1,map:{baseMap:{id:"vector"},terrain:{provider:"CesiumIon",requestVertexNormals:!0,requestWaterMask:!0},camera:{longitude:116.397428,latitude:39.90923,height:1e6,heading:0,pitch:-90,roll:0},controls:{zoomAmount:1e4,zoom:!0,scale:!0,fullscreen:!0},drawStyles:{}}};this.options=this.deepMerge(i,t),this.mapCore=new A(e,this.options),this.cameraControl=new O(this.mapCore.viewer,this.options.map.camera),this.basemapControl=new k(this.mapCore.viewer,this.options.map.baseMap),this.fullscreenControl=new D(this.mapCore.viewer,this.options.map.controls),this.zoomControl=new x(this.mapCore.viewer,this.options.map.controls),this.scaleControl=new R(this.mapCore.viewer,this.options.map.controls),this.drawTool=new P(this.mapCore.viewer,{styles:this.options.map.drawStyles}),this.measureTool=new z(this.mapCore.viewer),this.entityManager=new H(this.mapCore.viewer),this.marker=new F(this.mapCore.viewer),this.clusterMarker=new N(this.mapCore.viewer),this.spatialAnalysis=new W(this.mapCore.viewer),this.vectorTileLayer=new G(this.mapCore.viewer),this.options.map.controls.fullscreen?(this.fullscreenControl.show(),this.fullscreenControl.setPosition("top-right")):this.fullscreenControl.hide(),this.options.map.controls.zoom?(this.zoomControl.show(),this.zoomControl.setPosition("top-left")):this.zoomControl.hide(),this.options.map.controls.scale?(this.scaleControl.show(),this.scaleControl.setPosition("bottom-right")):this.scaleControl.hide(),window.cesiumInstance=this,window.Cesium=Cesium}deepMerge(e,t){const i={...e};for(const s in t)t[s]instanceof Object&&!Array.isArray(t[s])?s in e?i[s]=this.deepMerge(e[s],t[s]):i[s]={...t[s]}:t[s]!==void 0&&(i[s]=t[s]);return i}flyTo(e){return this.cameraControl.flyTo(e)}setView(e){return this.cameraControl.setView(e)}getPosition(){return this.cameraControl.getPosition()}setOrientation(e){return this.cameraControl.setOrientation(e)}move(e){return this.cameraControl.move(e)}rotate(e){return this.cameraControl.rotate(e)}}window.CesiumLite=V;
